{"ast":null,"code":"var _jsxFileName = \"E:\\\\repositorios\\\\HappyNLW\\\\web\\\\src\\\\pages\\\\CreateOrphanage.tsx\";\nimport React, { useState } from \"react\";\nimport { Map, Marker, TileLayer } from 'react-leaflet';\nimport { useHistory } from \"react-router-dom\";\nimport { FiPlus } from \"react-icons/fi\";\nimport MapIcon from '../utils/mapIcon';\nimport '../styles/pages/create-orphanage.css';\nimport Sidebar from \"../components/Sidebar\";\nimport api from \"../services/api\";\nexport default function CreateOrphanage() {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [opening_hours, setOpeningHours] = useState('');\n  const [open_on_weekends, setOpenOnWeekends] = useState(true);\n  const [images, setImages] = useState([]);\n  const [previewImages, setPreviewImages] = useState();\n  const {\n    goBack\n  } = useHistory();\n  const [position, setPosition] = useState({\n    latitude: 0,\n    longitude: 0\n  });\n\n  function handleMapClick(event) {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    setPosition({\n      latitude: lat,\n      longitude: lng\n    });\n  }\n\n  function handledelectImages(event) {\n    if (!event.target.files) {\n      return;\n    }\n\n    const SelectedImages = Array.from(event.target.files);\n    setImages(SelectedImages);\n    const SelectedImagesPreview = SelectedImages.map(image => {\n      return URL.createObjectURL(image);\n    });\n    setPreviewImages(SelectedImagesPreview);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      latitude,\n      longitude\n    } = position;\n    const data = new FormData();\n    data.append('name', name);\n    data.append('about', about);\n    data.append('latitude', String(longitude));\n    data.append('longitude', String(longitude));\n    data.append('instructions', instructions);\n    data.append('opening_hours', opening_hours);\n    data.append('open_on_weekends', String(open_on_weekends));\n    images.forEach(image => {\n      data.append('images', image);\n    });\n    await api.post('orphanages', data);\n    alert('cadastro');\n    history.push('/app');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-orphanage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"create-orphanage-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Dados\"), /*#__PURE__*/React.createElement(Map, {\n    center: [-27.2092052, -49.6401092],\n    style: {\n      width: '100%',\n      height: 280\n    },\n    zoom: 10,\n    onclick: (handleMapClick, console.log('')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: `https://a.tile.openstreetmap.org/{z}/{x}/{y}.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), position.latitude != 0 && /*#__PURE__*/React.createElement(Marker, {\n    interactive: false,\n    icon: MapIcon,\n    position: [position.latitude, position.longitude],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Sobre \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 44\n    }\n  }, \"M\\xE1ximo de 300 caracteres\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"name\",\n    maxLength: 300,\n    value: about,\n    onChange: event => setAbout(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Fotos\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploaded-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"images-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, previewImages === null || previewImages === void 0 ? void 0 : previewImages.map(image => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: image,\n      src: image,\n      alt: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image[]\",\n    className: \"new-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FiPlus, {\n    size: 24,\n    color: \"#15b6d6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handledelectImages,\n    type: \"file\",\n    id: \"image[]\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Visita\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"instructions\",\n    value: instructions,\n    onChange: event => setInstructions(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"opening_hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Horario de funcionamento\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"opening_hours\",\n    value: opening_hours,\n    onChange: event => setOpeningHours(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"open_on_weekends\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"Atende fim de semana\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setOpenOnWeekends(true);\n    },\n    className: open_on_weekends ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Sim\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setOpenOnWeekends(false);\n    },\n    className: !open_on_weekends ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"N\\xE3o\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Confirmar\"))));\n} // return `https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;","map":{"version":3,"sources":["E:/repositorios/HappyNLW/web/src/pages/CreateOrphanage.tsx"],"names":["React","useState","Map","Marker","TileLayer","useHistory","FiPlus","MapIcon","Sidebar","api","CreateOrphanage","history","name","setName","about","setAbout","instructions","setInstructions","opening_hours","setOpeningHours","open_on_weekends","setOpenOnWeekends","images","setImages","previewImages","setPreviewImages","goBack","position","setPosition","latitude","longitude","handleMapClick","event","lat","lng","latlng","handledelectImages","target","files","SelectedImages","Array","from","SelectedImagesPreview","map","image","URL","createObjectURL","handleSubmit","preventDefault","data","FormData","append","String","forEach","post","alert","push","width","height","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,IAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAIA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAmBd,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAiChB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACiB,aAAD,EAAgBC,eAAhB,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,gBAAD,EAAmBC,iBAAnB,IAAyCpB,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAK,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAS,EAAT,CAAnC;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,EAAlD;AAGA,QAAM;AAAEyB,IAAAA;AAAF,MAAarB,UAAU,EAA7B;AAEA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC;AAAC4B,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,SAAS,EAAC;AAAxB,GAAD,CAAxC;;AAEA,WAASC,cAAT,CAAwBC,KAAxB,EAAiD;AAC/C,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAaF,KAAK,CAACG,MAAzB;AACAP,IAAAA,WAAW,CAAC;AACVC,MAAAA,QAAQ,EAAEI,GADA;AAEVH,MAAAA,SAAS,EAAEI;AAFD,KAAD,CAAX;AAID;;AAGD,WAASE,kBAAT,CAA4BJ,KAA5B,EAAiE;AAC/D,QAAI,CAACA,KAAK,CAACK,MAAN,CAAaC,KAAlB,EAAwB;AACtB;AACD;;AACD,UAAMC,cAAc,GAAGC,KAAK,CAACC,IAAN,CAAWT,KAAK,CAACK,MAAN,CAAaC,KAAxB,CAAvB;AACAf,IAAAA,SAAS,CAACgB,cAAD,CAAT;AAEA,UAAMG,qBAAqB,GAAGH,cAAc,CAACI,GAAf,CAAmBC,KAAK,IAAI;AACxD,aAAOC,GAAG,CAACC,eAAJ,CAAoBF,KAApB,CAAP;AACD,KAF6B,CAA9B;AAGAnB,IAAAA,gBAAgB,CAACiB,qBAAD,CAAhB;AACD;;AAGD,iBAAeK,YAAf,CAA4Bf,KAA5B,EAA6C;AAC3CA,IAAAA,KAAK,CAACgB,cAAN;AACA,UAAM;AAAEnB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BH,QAAhC;AACA,UAAMsB,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBvC,IAApB;AACAqC,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBrC,KAArB;AACAmC,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBC,MAAM,CAACtB,SAAD,CAA9B;AACAmB,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBC,MAAM,CAACtB,SAAD,CAA/B;AACAmB,IAAAA,IAAI,CAACE,MAAL,CAAY,cAAZ,EAA4BnC,YAA5B;AACAiC,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6BjC,aAA7B;AACA+B,IAAAA,IAAI,CAACE,MAAL,CAAY,kBAAZ,EAAgCC,MAAM,CAAChC,gBAAD,CAAtC;AACAE,IAAAA,MAAM,CAAC+B,OAAP,CAAeT,KAAK,IAAI;AACxBK,MAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAqBP,KAArB;AAA6B,KAD7B;AAGA,UAAMnC,GAAG,CAAC6C,IAAJ,CAAS,YAAT,EAAuBL,IAAvB,CAAN;AACAM,IAAAA,KAAK,CAAC,UAAD,CAAL;AACA5C,IAAAA,OAAO,CAAC6C,IAAR,CAAa,MAAb;AACD;;AAGD,sBAEE;AAAK,IAAA,EAAE,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAA8B,IAAA,SAAS,EAAC,uBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAGE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,CAAC,CAAC,UAAF,EAAa,CAAC,UAAd,CADV;AAEE,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAFT;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,OAAO,GAAE3B,cAAc,EAAE4B,OAAO,CAACC,GAAR,CAAY,EAAZ,CAAlB,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,SAAD;AACE,IAAA,GAAG,EAAG,kDADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUGjC,QAAQ,CAACE,QAAT,IAAqB,CAArB,iBACC,oBAAC,MAAD;AACA,IAAA,WAAW,EAAE,KADb;AAEA,IAAA,IAAI,EAAEtB,OAFN;AAGA,IAAA,QAAQ,EAAE,CAACoB,QAAQ,CAACE,QAAV,EAAmBF,QAAQ,CAACG,SAA5B,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAHF,eAqBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,KAAK,EAAElB,IAAxB;AAA8B,IAAA,QAAQ,EAAEoB,KAAK,IAAInB,OAAO,CAACmB,KAAK,CAACK,MAAN,CAAawB,KAAd,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBF,eA0BE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA7B,CADF,eAEE;AAAU,IAAA,EAAE,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAE,GAA/B;AAAoC,IAAA,KAAK,EAAE/C,KAA3C;AAAkD,IAAA,QAAQ,EAAEkB,KAAK,IAAIjB,QAAQ,CAACiB,KAAK,CAACK,MAAN,CAAawB,KAAd,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA1BF,eA+BE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAMI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrC,aADH,aACGA,aADH,uBACGA,aAAa,CAAEmB,GAAf,CAAmBC,KAAK,IAAI;AAC3B,wBACE;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,GAAG,EAAEA,KAAtB;AAA6B,MAAA,GAAG,EAAEhC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CADH,eAME;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANF,CANJ,eAgBI;AAAO,IAAA,QAAQ,EAAEwB,kBAAjB;AAAqC,IAAA,IAAI,EAAC,MAA1C;AAAiD,IAAA,EAAE,EAAC,SAApD;AAA8D,IAAA,QAAQ,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CA/BF,CADF,eAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAU,IAAA,EAAE,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAEpB,YAAnC;AAAiD,IAAA,QAAQ,EAAEgB,KAAK,IAAIf,eAAe,CAACe,KAAK,CAACK,MAAN,CAAawB,KAAd,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,eAQE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAO,IAAA,EAAE,EAAC,eAAV;AAA0B,IAAA,KAAK,EAAE3C,aAAjC;AAAgD,IAAA,QAAQ,EAAEc,KAAK,IAAIb,eAAe,CAACa,KAAK,CAACK,MAAN,CAAawB,KAAd,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,eAaE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAI;AAACxC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAAwB,KAA5D;AAA+D,IAAA,SAAS,EAAED,gBAAgB,GAAG,QAAH,GAAa,EAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAI;AAACC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAAyB,KAA7D;AAA+D,IAAA,SAAS,EAAE,CAACD,gBAAD,GAAoB,QAApB,GAA8B,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAHF,CAbF,CApDF,eA2EE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3EF,CADF,CAFF,CAFF;AAuFD,C,CAED","sourcesContent":["import React, { ChangeEvent, FormEvent, useState } from \"react\";\nimport { Map, Marker, TileLayer } from 'react-leaflet';\nimport { useHistory } from \"react-router-dom\";\n\nimport { FiPlus } from \"react-icons/fi\";\n\nimport MapIcon from '../utils/mapIcon'\nimport '../styles/pages/create-orphanage.css';\nimport Sidebar from \"../components/Sidebar\";\nimport {LeafletMouseEvent} from 'leaflet'\nimport api from \"../services/api\";\n\n\n\nexport default function CreateOrphanage() {\n  const history = useHistory()\n\n  const [name, setName]= useState('')\n  const [about, setAbout]= useState('')\n  const [instructions, setInstructions]= useState('')\n  const [opening_hours, setOpeningHours]= useState('')\n  const [open_on_weekends, setOpenOnWeekends ] = useState(true)\n  const[images, setImages] = useState<File[]>([])\n  const [previewImages, setPreviewImages] = useState<string[]>()\n\n\n  const { goBack } = useHistory();\n\n  const [position, setPosition] = useState({latitude: 0, longitude:0})\n\n  function handleMapClick(event: LeafletMouseEvent){\n    const {lat, lng} = event.latlng\n    setPosition({\n      latitude: lat,\n      longitude: lng,\n    })\n  }\n\n\n  function handledelectImages(event: ChangeEvent<HTMLInputElement>){\n    if (!event.target.files){\n      return;\n    }\n    const SelectedImages = Array.from(event.target.files)\n    setImages(SelectedImages)\n\n    const SelectedImagesPreview = SelectedImages.map(image => {\n      return URL.createObjectURL(image)\n    })\n    setPreviewImages(SelectedImagesPreview)\n  }\n\n\n  async function handleSubmit(event: FormEvent){\n    event.preventDefault()\n    const { latitude, longitude } = position;\n    const data = new FormData();\n\n    data.append('name', name)\n    data.append('about', about)\n    data.append('latitude', String(longitude))\n    data.append('longitude', String(longitude))\n    data.append('instructions', instructions)\n    data.append('opening_hours', opening_hours)\n    data.append('open_on_weekends', String(open_on_weekends))\n    images.forEach(image => {\n    data.append('images',image) })\n\n    await api.post('orphanages', data);\n    alert('cadastro')\n    history.push('/app')\n  }\n\n\n  return (\n\n    <div id=\"page-create-orphanage\">\n      <Sidebar/>\n      <main>\n        <form onSubmit={handleSubmit} className=\"create-orphanage-form\">\n          <fieldset>\n            <legend>Dados</legend>\n\n            <Map\n              center={[-27.2092052,-49.6401092]} \n              style={{ width: '100%', height: 280 }}\n              zoom={10}\n              onclick={handleMapClick, console.log('')}\n            >\n              <TileLayer\n                url={`https://a.tile.openstreetmap.org/{z}/{x}/{y}.png`}\n              />\n\n              {position.latitude != 0 &&\n               (<Marker\n                interactive={false}\n                icon={MapIcon}\n                position={[position.latitude,position.longitude]}/>)}\n\n            </Map>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"name\">Nome</label>\n              <input id=\"name\" value={name} onChange={event => setName(event.target.value)}/>\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"about\">Sobre <span>Máximo de 300 caracteres</span></label>\n              <textarea id=\"name\" maxLength={300} value={about} onChange={event => setAbout(event.target.value)}/>\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"images\">Fotos</label>\n\n              <div className=\"uploaded-image\">\n\n              </div>\n                <div className=\"images-container\">\n                  {previewImages?.map(image => {\n                    return(\n                      <img key={image} src={image} alt={name}></img>\n                    )\n                  })}\n                  <label htmlFor='image[]' className=\"new-image\">\n                  <FiPlus size={24} color=\"#15b6d6\" />\n                  </label>\n                </div>\n                <input onChange={handledelectImages} type=\"file\" id='image[]' multiple/>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>Visitação</legend>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"instructions\">Instruções</label>\n              <textarea id=\"instructions\" value={instructions} onChange={event => setInstructions(event.target.value)}/>\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"opening_hours\">Horario de funcionamento</label>\n              <input id=\"opening_hours\" value={opening_hours} onChange={event => setOpeningHours(event.target.value)}/>\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"open_on_weekends\">Atende fim de semana</label>\n\n              <div className=\"button-select\">\n                <button type=\"button\" onClick={()=>{setOpenOnWeekends(true)}}  className={open_on_weekends ? 'active': ''}>Sim</button>\n                <button type=\"button\" onClick={()=>{setOpenOnWeekends(false)}} className={!open_on_weekends ? 'active': ''}>Não</button>\n              </div>\n            </div>\n          </fieldset>\n\n          <button className=\"confirm-button\" type=\"submit\">\n            Confirmar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n\n// return `https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;\n"]},"metadata":{},"sourceType":"module"}